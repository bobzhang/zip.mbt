// Generated using `moon info`, DON'T EDIT IT
package "bobzhang/zip/member"

import(
  "bobzhang/zip/file"
  "bobzhang/zip/types"
  "bobzhang/zip/types/fpath"
)

// Values
let dos_epoch : @types.Ptime

fn format_file_mode(@types.FileMode) -> String

fn fpath_ensure_directoryness(@fpath.Fpath) -> @fpath.Fpath

fn fpath_ensure_unix(@fpath.Fpath) -> @fpath.Fpath

let max_member_count : Int

let max_path_length : Int

fn ptime_format(@types.Ptime) -> String

// Errors

// Types and methods
pub struct Member {
  path : @fpath.Fpath
  kind : MemberKind
  mode : @types.FileMode
  mtime : @types.Ptime
}
fn Member::format(Self) -> String
fn Member::format_long(Self) -> String
fn Member::is_dir(Self) -> Bool
fn Member::is_file(Self) -> Bool
fn Member::kind(Self) -> MemberKind
#as_free_fn
fn Member::make(@fpath.Fpath, MemberKind, mode? : @types.FileMode, mtime? : @types.Ptime) -> Self raise
fn Member::mode(Self) -> @types.FileMode
fn Member::mtime(Self) -> @types.Ptime
fn Member::path(Self) -> @fpath.Fpath

pub(all) enum MemberKind {
  Dir
  File(@file.File)
}

// Type aliases
pub typealias @file.File as File

pub typealias @types.FileMode as FileMode

pub typealias @fpath.Fpath as Fpath

pub typealias @types.Ptime as Ptime

// Traits

