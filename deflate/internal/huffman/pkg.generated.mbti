// Generated using `moon info`, DON'T EDIT IT
package "bobzhang/zip/huffman"

// Values
let fixed_dist_decoder : HuffmanDecoder

let fixed_dist_encoder : HuffmanEncoder

let fixed_litlen_decoder : HuffmanDecoder

let fixed_litlen_encoder : HuffmanEncoder

fn reverse_bits(Int, Int) -> Int

fn sym_info_code(Int) -> Int

fn sym_info_code_length(Int) -> Int

fn sym_info_make(Int, Int) -> Int

// Errors

// Types and methods
type HuffmanDecoder
fn HuffmanDecoder::count(Self, Int) -> Int
fn HuffmanDecoder::counts_length(Self) -> Int
fn HuffmanDecoder::init_from_lengths(Self, Array[Int], Int, Int) -> Unit
fn HuffmanDecoder::max_sym(Self) -> Int
fn HuffmanDecoder::new() -> Self
fn HuffmanDecoder::symbol(Self, Int) -> Int
fn HuffmanDecoder::symbols_length(Self) -> Int

type HuffmanEncoder
fn HuffmanEncoder::codes_length(Self) -> Int
fn HuffmanEncoder::get(Self, Int) -> Int
fn HuffmanEncoder::max_sym(Self) -> Int
fn HuffmanEncoder::new() -> Self
fn HuffmanEncoder::set(Self, Int, Int) -> Unit

// Type aliases
pub typealias Int as SymInfo

// Traits

