// Generated using `moon info`, DON'T EDIT IT
package "bobzhang/zip/deflate"

// Values
fn adler32_and_deflate(BytesView, level? : DeflateLevel) -> (UInt, Bytes) raise

fn crc32_and_deflate(BytesView, level? : DeflateLevel) -> (UInt, Bytes) raise

fn deflate(BytesView, level? : DeflateLevel) -> Bytes raise

fn deflate_dynamic(BytesView, Bool, Int, Int) -> Bytes

fn deflate_fixed(BytesView, Bool, Int, Int) -> Bytes

fn deflate_stored(Bytes, Int, Int) -> Bytes raise

fn inflate(Bytes, Int, Int, Int?) -> Bytes raise

fn inflate_and_adler32(Bytes, Int, Int, Int?) -> (Bytes, UInt) raise

fn inflate_and_crc32(Bytes, Int, Int, Int?) -> (Bytes, UInt) raise

fn zlib_compress(BytesView, level? : DeflateLevel) -> (UInt, Bytes)

fn zlib_decompress(Bytes, Int, Int) -> (Bytes, UInt) raise

// Errors

// Types and methods
pub(all) enum DeflateLevel {
  None
  Fast
  Default
  Best
}
impl Eq for DeflateLevel
impl Show for DeflateLevel

// Type aliases

// Traits

